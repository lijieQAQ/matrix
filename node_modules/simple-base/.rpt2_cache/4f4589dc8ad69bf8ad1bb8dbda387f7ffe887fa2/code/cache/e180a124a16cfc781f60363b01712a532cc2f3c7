{"code":"import alphabetMap from './alphabet/index';\r\nexport default function (encoded, base) {\r\n    var bytes = [0];\r\n    var c;\r\n    var carry;\r\n    var i = 0;\r\n    var j;\r\n    if (encoded.length === 0) {\r\n        return '';\r\n    }\r\n    while (i < encoded.length) {\r\n        c = encoded[i];\r\n        if (!(c in alphabetMap[base])) {\r\n            return '';\r\n        }\r\n        j = 0;\r\n        while (j < bytes.length) {\r\n            bytes[j] *= base;\r\n            j++;\r\n        }\r\n        bytes[0] += alphabetMap[base][c];\r\n        carry = 0;\r\n        j = 0;\r\n        while (j < bytes.length) {\r\n            bytes[j] += carry;\r\n            carry = bytes[j] >> 8;\r\n            bytes[j] &= 0xff;\r\n            ++j;\r\n        }\r\n        while (carry) {\r\n            bytes.push(carry & 0xff);\r\n            carry >>= 8;\r\n        }\r\n        i++;\r\n    }\r\n    i = 0;\r\n    while (encoded[i] === '1' && i < encoded.length - 1) {\r\n        bytes.push(0);\r\n        i++;\r\n    }\r\n    return String.fromCharCode.apply(String, (bytes.reverse()));\r\n}\r\n","map":{"mappings":""}}
