{"code":"import alphabet from './alphabet/constants';\r\nexport default function (source, base) {\r\n    if (source === '') {\r\n        return '';\r\n    }\r\n    var buffer = source.split('').map(function (char) { return char.charCodeAt(0); });\r\n    var digits = [0];\r\n    var carry;\r\n    var i = 0;\r\n    var j;\r\n    while (i < buffer.length) {\r\n        j = 0;\r\n        while (j < digits.length) {\r\n            digits[j] <<= 8;\r\n            j++;\r\n        }\r\n        digits[0] += buffer[i];\r\n        carry = 0;\r\n        j = 0;\r\n        while (j < digits.length) {\r\n            digits[j] += carry;\r\n            carry = (digits[j] / base) | 0;\r\n            digits[j] %= base;\r\n            j++;\r\n        }\r\n        while (carry) {\r\n            digits.push(carry % base);\r\n            carry = (carry / base) | 0;\r\n        }\r\n        i++;\r\n    }\r\n    i = 0;\r\n    while (buffer[i] === 0 && i < buffer.length - 1) {\r\n        digits.push(0);\r\n        i++;\r\n    }\r\n    return digits.reverse().map(function (digit) { return alphabet[base][digit]; }).join('');\r\n}\r\n","map":{"mappings":""}}
